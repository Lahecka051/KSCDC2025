import cv2

def gstreamer_pipeline(
    sensor_id=0,
    capture_width=1920,
    capture_height=1080,
    display_width=960,
    display_height=540,
    framerate=30,
    flip_method=0,
):
    """CSI 카메라(IMX477)를 위한 GStreamer 파이프라인을 생성합니다."""
    return (
        "nvarguscamerasrc sensor-id=%d ! "
        "video/x-raw(memory:NVMM), "
        "width=(int)%d, height=(int)%d, "
        "format=(string)NV12, framerate=(fraction)%d/1 ! "
        "nvvidconv flip-method=%d ! "
        "video/x-raw, width=(int)%d, height=(int)%d, format=(string)BGRx ! "
        "videoconvert ! "
        "video/x-raw, format=(string)BGR ! appsink"
        % (
            sensor_id,
            capture_width,
            capture_height,
            framerate,
            flip_method,
            display_width,
            display_height,
        )
    )

def main():
    # CAM0에 연결된 IMX477 카메라를 열기 위해 sensor_id=0으로 파이프라인 생성
    pipeline = gstreamer_pipeline(sensor_id=0)
    cap = cv2.VideoCapture(pipeline, cv2.CAP_GSTREAMER)

    if not cap.isOpened():
        print("에러: 카메라를 열 수 없습니다. (CAM0, IMX477)")
        print("연결 상태와 Jetson 보드 설정을 확인하세요.")
        return

    print("카메라가 성공적으로 열렸습니다. ESC 키를 누르면 종료됩니다.")

    window_handle = cv2.namedWindow("IMX477 Camera", cv2.WINDOW_AUTOSIZE)
    while cv2.getWindowProperty("IMX477 Camera", 0) >= 0:
        ret, frame = cap.read()
        if not ret:
            print("프레임을 읽는 데 실패했습니다.")
            break

        cv2.imshow("IMX477 Camera", frame)

        # 'ESC' 키(ASCII 27)를 누르면 종료
        key = cv2.waitKey(1)
        if key == 27:
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
