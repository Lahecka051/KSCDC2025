import time
from pymavlink import mavutil

# 젯슨의 시리얼 포트(/dev/ttyTHS1)로 연결
master = mavutil.mavlink_connection('/dev/ttyTHS1', baud=921600)

# 연결 확인
print("Waiting for heartbeat...")
master.wait_heartbeat()
print("Heartbeat from system (system %u component %u)" % (master.target_system, master.target_component))

# 모터 아밍(Arming)
print("Arming motors")
master.mav.command_long_send(
    master.target_system,
    master.target_component,
    mavutil.mavlink.MAV_CMD_COMPONENT_ARM_DISARM, 0,
    1, 0, 0, 0, 0, 0, 0)
time.sleep(2)
print("Motors armed")

# --- 채널 1(Roll) 제어 ---
# 채널 1에 낮은 값(1100)을 보내 롤 입력을 시뮬레이션합니다.
# 채널 3(스로틀)은 아주 살짝만(1050) 올려 모터가 돌 수 있게 합니다.
print("Sending Roll command for 3 seconds")
for _ in range(30):
    master.mav.rc_channels_override_send(
        master.target_system,
        master.target_component,
        1100, # Channel 1 (Roll) - 왼쪽으로 기울이기
        1500, # Channel 2 (Pitch) - 중립
        1050, # Channel 3 (Throttle) - 모터가 돌기 시작하는 최소값
        1500, # Channel 4 (Yaw) - 중립
        0, 0, 0, 0)
    time.sleep(0.1)

# RC Override 초기화
master.mav.rc_channels_override_send(
    master.target_system,
    master.target_component,
    0, 0, 0, 0, 0, 0, 0, 0)
print("Roll command finished")
time.sleep(1)

# 모터 해제(Disarm)
print("Disarming motors")
master.mav.command_long_send(
    master.target_system,
    master.target_component,
    mavutil.mavlink.MAV_CMD_COMPONENT_ARM_DISARM, 0,
    0, 0, 0, 0, 0, 0, 0)
print("Motors disarmed")
