# mission.py
import time
from dronekit import connect, VehicleMode
import drone_controller as dc

# --- Configuration ---
CONNECTION_STRING = "/dev/ttyS0"
TARGET_ALTITUDE = 10

def takeoff(DataRT, target_altitude):
    """Arms and takes off the drone to a specified altitude."""
    DataRT.mode = VehicleMode("GUIDED")
    DataRT.armed = True
    while not DataRT.armed:
        time.sleep(1)
    DataRT.simple_takeoff(target_altitude)
    while True:
        if DataRT.location.global_relative_frame.alt >= target_altitude * 0.95:
            break
        time.sleep(1)

def land(DataRT):
    """Lands the drone and closes the connection."""
    if DataRT:
        DataRT.mode = VehicleMode("LAND")
        DataRT.close()

def main():
    """Main function to run the complete flight mission."""
    DataRT = None
    try:
        DataRT = connect(CONNECTION_STRING, wait_ready=True)

        takeoff(DataRT, TARGET_ALTITUDE)
        
        # Mission 1: Ascend while flying diagonally
        dc.execute_flight_command(DataRT,
            vertical_mode='ascend',
            angle=45,
            speed=2,
            duration=5
        )

        # Default action when not moving: Hover for 3 seconds
        dc.hover(DataRT, duration=3)

        # Mission 2: Level flight, moving backward
        dc.execute_flight_command(DataRT,
            vertical_mode='level',
            angle=180,
            speed=3,
            duration=4
        )

        # Default action when not moving: Hover for 3 seconds
        dc.hover(DataRT, duration=3)

        # Mission 3: Descend while flying left
        dc.execute_flight_command(DataRT,
            vertical_mode='descend',
            angle=270,
            speed=2,
            duration=5
        )

    except Exception as e:
        print(f"An error occurred during the mission: {e}")
    finally:
        land(DataRT)

if __name__ == "__main__":
    main()
