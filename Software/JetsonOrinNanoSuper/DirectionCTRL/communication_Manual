주요 기능
1. 양방향 통신

드론 → Jetson: GPS 및 텔레메트리 데이터 전송
Jetson → 드론: 제어 명령 및 GPS 이동 명령 전송

2. 메시지 타입

GPS_DATA: GPS/텔레메트리 데이터
CONTROL_CMD: 일반 제어 명령
GPS_CMD: GPS 좌표 이동 명령
ACK: 명령 수신 확인
STATUS: 드론 상태
HEARTBEAT: 연결 상태 확인

3. 두 가지 인터페이스

UARTCommunication: 드론 측에서 사용
JetsonInterface: Jetson 측에서 사용

🚀 사용 방법
드론 측 (main_control.py에서)
pythonfrom communication import UARTCommunication

# 초기화
uart = UARTCommunication("/dev/ttyTHS1", 115200)
uart.start()

# GPS 데이터 전송
telemetry = await connection.get_telemetry()
uart.send_gps_data(telemetry)

# 제어 명령 수신
cmd = uart.get_control_command()
if cmd:
    command_data = cmd.get('command', {})
    drone.cmd = [
        command_data.get('vertical'),
        command_data.get('horizontal'),
        command_data.get('rotation'),
        command_data.get('speed')
    ]

# GPS 명령 수신
gps_cmd = uart.get_gps_command()
if gps_cmd:
    gps_data = gps_cmd.get('command', {})
    drone.cmd = [
        "gps",
        gps_data.get('latitude'),
        gps_data.get('longitude'),
        gps_data.get('altitude', 10.0)
    ]
Jetson 측 (외부 모듈에서)
pythonfrom communication import JetsonInterface

# 연결
jetson = JetsonInterface("/dev/ttyTHS1", 115200)
jetson.connect()

# 일반 제어 명령
jetson.send_control(["up", "forward_left", 30, 50])

# GPS 이동 명령
jetson.send_control(["gps", 35.123456, 129.123456, 10.0])

# GPS 데이터 수신
gps_data = jetson.get_gps_data()
if gps_data:
    print(f"드론 위치: {gps_data['position']}")
    print(f"배터리: {gps_data['battery']}")
📊 통신 프로토콜
제어 명령 (Jetson → 드론)
json{
    "type": "CTRL",
    "seq": 123,
    "timestamp": "2025-01-15T10:30:00",
    "command": {
        "vertical": "up",
        "horizontal": "forward_left",
        "rotation": 30,
        "speed": 50,
        "speed_type": "percent"
    }
}
GPS 명령 (Jetson → 드론)
json{
    "type": "GPS_CMD",
    "seq": 124,
    "timestamp": "2025-01-15T10:31:00",
    "command": {
        "latitude": 35.123456,
        "longitude": 129.123456,
        "altitude": 10.0
    }
}
GPS 데이터 (드론 → Jetson)
json{
    "type": "GPS",
    "timestamp": "2025-01-15T10:30:00",
    "data": {
        "position": {
            "lat": 35.123456,
            "lon": 129.123456,
            "alt_rel": 10.0
        },
        "velocity": {
            "north": 1.2,
            "east": 0.5,
            "down": -0.1
        },
        "battery": {
            "voltage": 12.4,
            "percent": 85
        }
    }
}
🔧 통합 예제
python# main_control.py에서 사용
class Drone:
    def __init__(self):
        self.uart = UARTCommunication("/dev/ttyTHS1", 115200)
        
    async def _uart_processing_loop(self):
        """UART 명령 처리"""
        while self.is_running:
            # 일반 제어 명령
            cmd = self.uart.get_control_command(timeout=0.05)
            if cmd:
                command_data = cmd.get('command', {})
                self.cmd = [
                    command_data.get('vertical', 'level'),
                    command_data.get('horizontal', 'hover'),
                    command_data.get('rotation', 0),
                    command_data.get('speed', 0)
                ]
            
            # GPS 이동 명령
            gps_cmd = self.uart.get_gps_command(timeout=0.05)
            if gps_cmd:
                gps_data = gps_cmd.get('command', {})
                if 'altitude' in gps_data:
                    self.cmd = ["gps", gps_data['latitude'], 
                               gps_data['longitude'], gps_data['altitude']]
                else:
                    self.cmd = ["gps", gps_data['latitude'], 
                               gps_data['longitude']]
            
            await asyncio.sleep(0.01)
